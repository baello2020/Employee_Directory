{"version":3,"sources":["components/Hero/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","pages/images/workplace.jpg","pages/About.js","components/SearchForm/index.js","components/SearchResults/index.js","utils/API.js","pages/Directory.js","components/Navbar/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","props","className","style","backgroundImage","children","Container","Row","Col","size","split","map","join","About","SearchForm","onChange","handleFormSubmit","htmlFor","value","search","handleInputChange","name","list","type","placeholder","id","handleSort","document","querySelector","employees","employee","first","last","login","uuid","SearchResults","results","result","alt","src","picture","large","dob","age","email","phone","title","API","getEmployees","numberOfUsers","axios","get","Directory","useState","setEmployees","setResults","error","setError","useEffect","then","res","data","sorted","sort","a","b","err","console","log","minHeight","e","preventDefault","searchRes","filter","toLowerCase","includes","message","target","sortedBy","Navbar","to","window","location","pathname","exact","path","Footer","prevScrollpos","pageYOffset","onscroll","currentScrollPos","bottom","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.368eee40.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Hero = props => {\n  return (\n    <div\n      className=\"hero text-center\"\n      style={{ backgroundImage: `url(${props.backgroundImage})` }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\n\nconst Container = props => {\n  return (\n    <div className=\"container\" style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\nconst Row = props => {\n  return <div className=\"row\">{props.children}</div>;\n};\n\nexport default Row;\n","import React from \"react\";\n\nconst Col = props => {\n  const size = props.size\n    .split(\" \")\n    .map(size => \"col-\" + size)\n    .join(\" \");\n\n  return <div className={size}>{props.children}</div>;\n};\n\nexport default Col;\n","export default __webpack_public_path__ + \"static/media/workplace.ba9d0e96.jpg\";","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Col\";\nimport backgroundImage from \"./images/workplace.jpg\";\n\nconst About = () => {\n  return (\n    <div>\n      \n      <Hero backgroundImage={backgroundImage}>\n        <h1>TEAM.</h1>\n        <h2 >“If you can laugh together,</h2>\n<h2 >you can work together.”\nRobert Orben</h2>\n      </Hero>\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <h1>Welcome to Employee Directory!</h1>\n            <p>\n            As a user, I want to be able to view my entire employee directory at once so that I have quick access to their information.\n            </p>\n            <br />\n            <p>\n            An employee or manager would benefit greatly from being able to view non-sensitive data about other employees. It would be particularly helpful to be able to filter employees by name.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nconst SearchForm = props => {\n  return (\n    <form className=\"search\" onChange={props.handleFormSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"name\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for a User by Name.\"\n          id=\"employee\"\n        />\n        <label htmlFor=\"sort\">Sort:</label>\n        <select\n          className=\"form-control\"\n          name=\"sort\"\n          id=\"sort\"\n          onChange={() =>\n            props.handleSort(document.querySelector(\"#sort\").value)\n          }\n        >\n          <option value=\"First Name\">First Name A-Z</option>\n          <option value=\"Last Name\">Last Name A-Z</option>\n          <option value=\"Age\">Age</option>\n          <option value=\"Email\">Email</option>\n        </select>\n        <datalist id=\"employees\">\n          {props.employees.map(employee => (\n            <option\n              value={`${employee.name.first} ${employee.name.last}`}\n              key={employee.login.uuid}\n            />\n          ))}\n        </datalist>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nconst SearchResults = ({ results }) => {\n  return (\n    <ul className=\"list-group search-results\">\n      {results.map(result => (\n        <div key={result.login.uuid}>\n          <li className=\"list-group-item\">\n            <img\n              alt={`${result.name.first} ${result.name.last}`}\n              src={result.picture.large}\n              className=\"img-fluid\"\n            />\n            <h2>{`${result.name.first} ${result.name.last}`}</h2>\n            <p>Age: {result.dob.age}</p>\n            <p>Email: {result.email}</p>\n            <p>Phone: {result.phone}</p>\n            <p>Preferred Title: {result.name.title}</p>\n          </li>\n        </div>\n      ))}\n    </ul>\n  );\n};\n\nexport default SearchResults;\n","import axios from \"axios\";\n\nconst baseURL = \"https://randomuser.me/api/\";\n\nconst API = {\n  getEmployees: numberOfUsers => {\n    return axios.get(baseURL + `?results=${numberOfUsers}`);\n  },\n};\n\nexport default API;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm/index\";\nimport SearchResults from \"../components/SearchResults/index\";\nimport API from \"../utils/API\";\n\nconst Directory = () => {\n  const [employees, setEmployees] = useState([]);\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    try {\n      API.getEmployees(25).then(res => {\n        setEmployees([...res.data.results]);\n        const sorted = [...res.data.results].sort((a, b) =>\n          a.name.first > b.name.first ? 1 : -1\n        );\n        setResults([...sorted]);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  const handleInputChange = e => {\n    setResults(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    try {\n      let searchRes = employees.filter(employee =>\n        `${employee.name.first} ${employee.name.last}`\n          .toLowerCase()\n          .includes(document.querySelector(\"#employee\").value.toLowerCase())\n      );\n\n      setResults([...searchRes]);\n    } catch (err) {\n      setError(err.message);\n      console.log(error);\n    }\n  };\n\n  const handleSort = sortedBy => {\n    console.log(sortedBy);\n    let sorted;\n    switch (sortedBy) {\n      case \"First Name\":\n        sorted = employees.sort((a, b) =>\n          a.name.first > b.name.first ? 1 : -1\n        );\n        console.log(sorted);\n        setResults([...sorted]);\n        break;\n      case \"Last Name\":\n        sorted = employees.sort((a, b) => (a.name.last > b.name.last ? 1 : -1));\n        setResults([...sorted]);\n        console.log(sorted);\n        break;\n      case \"Age\":\n        sorted = employees.sort((a, b) => (a.dob.age > b.dob.age ? 1 : -1));\n        setResults([...sorted]);\n        console.log(sorted);\n        break;\n      case \"Email\":\n        sorted = employees.sort((a, b) => (a.email > b.email ? 1 : -1));\n        setResults([...sorted]);\n        console.log(sorted);\n        break;\n      default:\n        sorted = employees.sort((a, b) =>\n          a.name.first > b.name.first ? 1 : -1\n        );\n        setResults([...sorted]);\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Container style={{ minHeight: \"80%\" }}>\n        <SearchForm\n          handleFormSubmit={handleFormSubmit}\n          handleInputChange={handleInputChange}\n          handleSort={handleSort}\n          employees={employees}\n        />\n        <SearchResults results={results} />\n      </Container>\n    </div>\n  );\n};\n\nexport default Directory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport About from \"../../pages/About\";\nimport Directory from \"../../pages/Directory\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nconst Navbar = () => {\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Orlando's Team Directory\n        </Link>\n        <div>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                to=\"/\"\n                className={\n                  window.location.pathname === \"/\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"\n                }\n              >\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/directory\"\n                className={\n                  window.location.pathname === \"/directory\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"\n                }\n              >\n                Search Team\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <div>\n        {/* Switch Pathes */}\n        <Switch>\n          <Route exact path=\"/\">\n            <About />\n          </Route>\n          <Route path=\"/Directory\">\n            <Directory />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = () => {\n  let prevScrollpos = window.pageYOffset;\n  window.onscroll = () => {\n    let currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos) {\n      document.querySelector(\".footer\").style.bottom = \"0\";\n    } else {\n      document.querySelector(\".footer\").style.bottom = \"-50px\";\n    }\n    prevScrollpos = currentScrollPos;\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span>&copy; Orlando Baello 2021</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar/index\";\nimport Footer from \"./components/Footer/index\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar></Navbar>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}